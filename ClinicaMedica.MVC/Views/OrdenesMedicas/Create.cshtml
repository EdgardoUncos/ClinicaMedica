@model ClinicaMedica.MVC.Models.OrdenesVM

@{
    ViewData["Title"] = "Create";
}

@{
    List<SelectListItem> Servicios = ViewBag.Servicios;
}


<div class="container">

    <div class="card">
        <div class="card-header">
            Orden de Consulta
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-sm-4">
                    <label class="form-label" asp-for="Paciente.PacienteId">Id Paciente</label>
                    <input class="form-control-sm" type="text" asp-for="Paciente.PacienteId" disabled="true" id="pacienteid" />
                </div>

                <div class="col-sm-4">
                    <label class="form-label">Nombre Paciente</label>
                    <input class="form-control-sm" type="text" asp-for="Paciente.Persona.Nombre" disabled="true" />
                </div>

                <div class="col-sm-4">
                    <label class="form-label">Apellido</label>
                    <input class="form-control-sm" type="text" asp-for="Paciente.Persona.Apellido" disabled="true" />
                </div>
            </div>
            <hr />

            <div class="row align-items-end">
                <div class="col-sm-3">
                    <label class="form-label">Servicio</label>
                    <select class="form-select" asp-items="@Servicios" id="txtproducto">
                        <option value="" selected disabled>Seleccione un servicio</option>
                    </select>
                </div>
                <div class="col-sm-3">
                    <label class="form-label">Precio</label>
                    <input class="form-control-sm" type="text" id="txtprecio" disabled />
                </div>
                <div class="col-sm-3">
                    <label class="form-label">Cantidad</label>
                    <input class="form-control form-control-sm" type="text" id="txtcantidad">
                </div>
                <div class="col-sm-3">
                    <button class="btn btn-success btn-sm" id="btnAgregar">Agregar</button>
                    <button class="btn btn-primary btn-sm" id="btnTerminar">Terminar</button>
                </div>
            </div>

            <hr />

            <div class="row">
                <div class="col-sm-12">
                    <table class="table table-bordered table-sm" id="tbProducto">
                        <thead>
                            <tr class="table-dark">
                                <th>Codigo</th>
                                <th>Servicio</th>
                                <th>Precio</th>
                                <th>Cantidad</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                        <tfoot>
                            <tr>
                                <th colspan="4" class="text-end">Total General</th>
                                <th id="totalGeneral">0</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>


        </div>

    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>

        $("#txtproducto").val(""); // Esto seleccionará la opción vacía

        var totalGeneral = 0;

        $("#btnAgregar").on("click", function () {

            console.log('Hola');

        })

       const urlObtenerPrecio = '@Url.Action("GetPrice")';
       $("#txtproducto").change(async function () {

                const valorSeleccionado = $(this).val();
                console.log(valorSeleccionado);

           const respuesta = await fetch(urlObtenerPrecio,
               {
                   method: 'POST',
                   body: valorSeleccionado,
                   headers: {
                       'Content-Type': 'application/json'
                   }
               });

           const json = await respuesta.json();
           console.log(json);
           $("#txtprecio").val(json);
                           
       })

        var totalGeneral = 0;

        $("#btnAgregar").on("click", function () {
            var precio = parseFloat($("#txtprecio").val());
            var cantidad = parseFloat($("#txtcantidad").val());

            if (isNaN(precio) || isNaN(cantidad) || cantidad <= 0) {
                alert("Ingrese un precio y cantidad válidos.");
                return;
            }

            var total = precio * cantidad;
            var servicioSeleccionado = $("#txtproducto option:selected").text();
            var codigo = $("#txtproducto").val();

            var filaExistente = $("#tbProducto tbody tr").filter(function () {
                return $(this).find("td:first").text() === codigo; // Busca por código
            });

            if (filaExistente.length > 0) {
                // Si el producto ya existe en la tabla, actualizar cantidad y total
                var cantidadActual = parseFloat(filaExistente.find("td:eq(3)").text()); // Obtiene la cantidad actual
                var nuevaCantidad = cantidadActual + cantidad;
                var nuevoTotal = nuevaCantidad * precio;

                filaExistente.find("td:eq(3)").text(nuevaCantidad); // Actualiza cantidad
                filaExistente.find("td:eq(4)").text(nuevoTotal.toFixed(2)); // Actualiza total
            } else {
                // Si el producto no existe, agregar una nueva fila
                $("#tbProducto tbody").append(
                    $("<tr>").append(
                        $("<td>").text(codigo),
                        $("<td>").text(servicioSeleccionado),
                        $("<td>").text(precio.toFixed(2)),
                        $("<td>").text(cantidad),
                        $("<td>").text(total.toFixed(2)),
                        $("<td>").append(
                            $('<button class="btn btn-danger btn-sm">').text("Eliminar").on("click", function () {
                                var fila = $(this).closest("tr");
                                var totalFila = parseFloat(fila.find("td:eq(4)").text());
                                totalGeneral -= totalFila;
                                $("#totalGeneral").text(totalGeneral.toFixed(2));
                                fila.remove();
                            })
                        )
                    )
                );
            }

            // Recalcular el total general
            totalGeneral = 0;
            $("#tbProducto tbody tr").each(function () {
                totalGeneral += parseFloat($(this).find("td:eq(4)").text());
            });

            $("#totalGeneral").text(totalGeneral.toFixed(2));

            // Limpiar inputs y volver a enfocar
            $("#txtproducto").val("");
            $("#txtprecio").val("");
            $("#txtcantidad").val("");
            $("#txtproducto").focus();
        });

        // ------ Envio de la OrdenMedica con sus detalles -------

        $("#btnTerminar").on("click", function () {
            console.log("Venta cerrada");

            var detallecitas = [];
            var total = 0;

            $("#tbProducto > tbody > tr").each(function () {
                detallecitas.push({
                    CitaMedicaId: '0',
                    ServicioId: $(this).find('td:eq(0)').text() // Código del servicio
                });
                total += parseFloat($(this).find('td:eq(4)').text());
            });

            //var pacienteId = $("input[asp-for='Paciente.PacienteId']").val(); // Asegurar que se obtiene el ID del paciente

            var pacienteId = $("#pacienteid").val();
            var medicoId = "1";

            var CitasMedicasCreacionDTO = {
                PacienteId: pacienteId,
                MedicoId: medicoId,
                DetalleCitas: detallecitas,
                Total: total
            };

            console.log(detallecitas);
            console.log(CitasMedicasCreacionDTO);

            $.ajax({
                url: '@Url.Action("CreateOM", "OrdenesMedicas")',
                type: "POST",
                data: JSON.stringify(CitasMedicasCreacionDTO),
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    if (data.respuesta) {
                        alert("Orden Médica Registrada");
                        location.reload();
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error en la petición:", error);
                    alert("Ocurrió un error al registrar la orden.");
                }
            });
        });
        

    </script>

}