@page "/servicos"
@using ClinicaMedica.Model.DTOs.Basic
@using ClinicaMedica.UI.Components
@inject HttpClient Http


<h2>Servicios</h2>

<div class="container">
    <table class="table">
        <thead>
            <tr>
                <td>Id</td>
                <td>Servicio</td>
                <td>Descripcion</td>
                <td>Acciones</td>
            </tr>
        </thead>
        <tbody>
            @if (ListaServicios != null)
            {
                @foreach (var servicio in ListaServicios)
                {
                    <tr>
                        <td>@servicio.ServicioId</td>
                        <td>@servicio.Nombre</td>
                        <td>@servicio.Descripcion</td>
                        <td>
                            <button class="btn btn-success"><i class="bi bi-pen-fill"></i></button>
                            <button class="btn btn-danger"><i class="bi bi-trash3-fill"></i></button>
                        </td>
                    </tr>

                }
            }
        </tbody>
    </table>
</div>



@code {
    private List<ServiciosDTO> ListaServicios = new List<ServiciosDTO>();
    private OrdenViewModel ordenVM;

    protected override async Task OnInitializedAsync()
    {
        ordenVM = new OrdenViewModel();
        var response = await Http.GetAsync("https://localhost:7268/api/Servicios");

        if(response.IsSuccessStatusCode)
        {
            var leoDes = await response.Content.ReadAsAsync<List<ServiciosDTO>>();
            ListaServicios = leoDes;
            ordenVM.Servicios = (from p in leoDes select p).ToList();
        }
    }

    
}
